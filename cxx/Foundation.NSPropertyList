@_exported import CoreFoundation

typealias NSPropertyListMutabilityOptions = Int
var NSPropertyListImmutable: Int { get }
var NSPropertyListMutableContainers: Int { get }
var NSPropertyListMutableContainersAndLeaves: Int { get }
@available(swift, obsoleted: 3, renamed: "PropertyListSerialization.PropertyListFormat")
typealias NSPropertyListFormat = PropertyListSerialization.PropertyListFormat
extension PropertyListSerialization {
  enum PropertyListFormat : UInt, @unchecked Sendable {
    init?(rawValue: UInt)
    var rawValue: UInt { get }
    typealias RawValue = UInt
    case openStepFormat
    @available(swift, obsoleted: 3, renamed: "openStepFormat")
    static var OpenStepFormat: PropertyListSerialization.PropertyListFormat { get }
    case xmlFormat_v1_0
    @available(swift, obsoleted: 3, renamed: "xmlFormat_v1_0")
    static var XMLFormat_v1_0: PropertyListSerialization.PropertyListFormat { get }
    case binaryFormat_v1_0
    @available(swift, obsoleted: 3, renamed: "binaryFormat_v1_0")
    static var BinaryFormat_v1_0: PropertyListSerialization.PropertyListFormat { get }
  }
  typealias ReadOptions = NSPropertyListMutabilityOptions
  typealias WriteOptions = Int
}
@available(swift, obsoleted: 3, renamed: "PropertyListSerialization.ReadOptions")
typealias NSPropertyListReadOptions = PropertyListSerialization.ReadOptions
@available(swift, obsoleted: 3, renamed: "PropertyListSerialization.WriteOptions")
typealias NSPropertyListWriteOptions = PropertyListSerialization.WriteOptions
@available(swift, obsoleted: 3, renamed: "PropertyListSerialization")
typealias NSPropertyListSerialization = PropertyListSerialization
class PropertyListSerialization : NSObject {
  class func propertyList(_ plist: Any, isValidFor format: PropertyListSerialization.PropertyListFormat) -> Bool
  @available(swift, obsoleted: 3, renamed: "propertyList(_:isValidFor:)")
  class func propertyList(_ plist: Any, isValidForFormat format: PropertyListSerialization.PropertyListFormat) -> Bool
  @available(iOS 4.0, *)
  class func data(withPropertyList plist: Any, format: PropertyListSerialization.PropertyListFormat, options opt: PropertyListSerialization.WriteOptions) throws -> Data
  @available(iOS 4.0, *)
  @available(swift, obsoleted: 3, renamed: "data(withPropertyList:format:options:)")
  class func dataWithPropertyList(_ plist: Any, format: PropertyListSerialization.PropertyListFormat, options opt: PropertyListSerialization.WriteOptions) throws -> Data
  @available(iOS 4.0, *)
  class func writePropertyList(_ plist: Any, to stream: OutputStream, format: PropertyListSerialization.PropertyListFormat, options opt: PropertyListSerialization.WriteOptions, error: NSErrorPointer) -> Int
  @available(iOS 4.0, *)
  @available(swift, obsoleted: 3, renamed: "writePropertyList(_:to:format:options:error:)")
  class func writePropertyList(_ plist: Any, toStream stream: OutputStream, format: PropertyListSerialization.PropertyListFormat, options opt: PropertyListSerialization.WriteOptions, error: NSErrorPointer) -> Int
  @available(iOS 4.0, *)
  class func propertyList(with data: Data, options opt: PropertyListSerialization.ReadOptions, format: UnsafeMutablePointer<PropertyListSerialization.PropertyListFormat>?) throws -> Any
  @available(iOS 4.0, *)
  @available(swift, obsoleted: 3, renamed: "propertyList(with:options:format:)")
  class func propertyListWithData(_ data: Data, options opt: PropertyListSerialization.ReadOptions, format: UnsafeMutablePointer<PropertyListSerialization.PropertyListFormat>?) throws -> Any
  @available(iOS 4.0, *)
  class func propertyList(with stream: InputStream, options opt: PropertyListSerialization.ReadOptions, format: UnsafeMutablePointer<PropertyListSerialization.PropertyListFormat>?) throws -> Any
  @available(iOS 4.0, *)
  @available(swift, obsoleted: 3, renamed: "propertyList(with:options:format:)")
  class func propertyListWithStream(_ stream: InputStream, options opt: PropertyListSerialization.ReadOptions, format: UnsafeMutablePointer<PropertyListSerialization.PropertyListFormat>?) throws -> Any
  @available(iOS, introduced: 2.0, deprecated: 8.0, message: "Use dataWithPropertyList:format:options:error: instead.")
  class func data(fromPropertyList plist: Any, format: PropertyListSerialization.PropertyListFormat, errorDescription errorString: UnsafeMutablePointer<NSString?>?) -> Data?
  @available(swift, obsoleted: 3, renamed: "data(fromPropertyList:format:errorDescription:)")
  @available(iOS, introduced: 2.0, deprecated: 8.0, message: "Use dataWithPropertyList:format:options:error: instead.")
  class func dataFromPropertyList(_ plist: Any, format: PropertyListSerialization.PropertyListFormat, errorDescription errorString: UnsafeMutablePointer<NSString?>?) -> Data?
  @available(iOS, introduced: 2.0, deprecated: 8.0, message: "Use propertyListWithData:options:format:error: instead.")
  class func propertyList(from data: Data, mutabilityOption opt: NSPropertyListMutabilityOptions, format: UnsafeMutablePointer<PropertyListSerialization.PropertyListFormat>?, errorDescription errorString: UnsafeMutablePointer<NSString?>?) -> Any?
  @available(swift, obsoleted: 3, renamed: "propertyList(from:mutabilityOption:format:errorDescription:)")
  @available(iOS, introduced: 2.0, deprecated: 8.0, message: "Use propertyListWithData:options:format:error: instead.")
  class func propertyListFromData(_ data: Data, mutabilityOption opt: NSPropertyListMutabilityOptions, format: UnsafeMutablePointer<PropertyListSerialization.PropertyListFormat>?, errorDescription errorString: UnsafeMutablePointer<NSString?>?) -> Any?
  init!()
}
