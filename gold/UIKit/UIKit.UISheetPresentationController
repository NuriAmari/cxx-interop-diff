@_exported import Foundation

@available(iOS 15.0, *)
@available(swift, obsoleted: 3, renamed: "UISheetPresentationControllerDetent.Identifier")
typealias UISheetPresentationControllerDetentIdentifier = UISheetPresentationController.Detent.Identifier
extension UISheetPresentationController.Detent {
  @available(iOS 15.0, *)
  struct Identifier : _ObjectiveCBridgeable, Hashable, Equatable, _SwiftNewtypeWrapper, RawRepresentable, @unchecked Sendable {
    init(_ rawValue: String)
    init(rawValue: String)
    var _rawValue: NSString
    var rawValue: String { get }
    typealias RawValue = String
    typealias _ObjectiveCType = NSString
  }
}
@available(iOS 15.0, *)
@available(swift, obsoleted: 3, renamed: "UISheetPresentationControllerDetent.Identifier.medium")
let UISheetPresentationControllerDetentIdentifierMedium: UISheetPresentationController.Detent.Identifier
extension UISheetPresentationController.Detent.Identifier {
  @available(iOS 15.0, *)
  static let medium: UISheetPresentationController.Detent.Identifier
  @available(iOS 15.0, *)
  static let large: UISheetPresentationController.Detent.Identifier
}
@available(iOS 15.0, *)
@available(swift, obsoleted: 3, renamed: "UISheetPresentationControllerDetent.Identifier.large")
let UISheetPresentationControllerDetentIdentifierLarge: UISheetPresentationController.Detent.Identifier
@available(iOS 15.0, *)
@available(swift, obsoleted: 3, renamed: "UISheetPresentationController.Detent")
@MainActor typealias UISheetPresentationControllerDetent = UISheetPresentationController.Detent
extension UISheetPresentationController {
  @available(iOS 15.0, *)
  @MainActor class Detent : NSObject {
    @available(*, unavailable)
    init()
    @available(*, unavailable)
    class func new() -> Self
    class func medium() -> Self
    @available(swift, obsoleted: 3, renamed: "medium()")
    class func mediumDetent() -> Self
    class func large() -> Self
    @available(swift, obsoleted: 3, renamed: "large()")
    class func largeDetent() -> Self
  }
}
@available(iOS 15.0, *)
let __UISheetPresentationControllerAutomaticDimension: CGFloat
@available(iOS 15.0, *)
@MainActor protocol UISheetPresentationControllerDelegate : UIAdaptivePresentationControllerDelegate {
  optional func sheetPresentationControllerDidChangeSelectedDetentIdentifier(_ sheetPresentationController: UISheetPresentationController)
}
@available(iOS 15.0, *)
@MainActor class UISheetPresentationController : UIPresentationController {
  weak var delegate: @sil_weak UISheetPresentationControllerDelegate?
  var sourceView: UIView?
  var prefersEdgeAttachedInCompactHeight: Bool
  var widthFollowsPreferredContentSizeWhenEdgeAttached: Bool
  var prefersGrabberVisible: Bool
  var __preferredCornerRadius: CGFloat
  var detents: [UISheetPresentationController.Detent]
  var selectedDetentIdentifier: UISheetPresentationController.Detent.Identifier?
  var largestUndimmedDetentIdentifier: UISheetPresentationController.Detent.Identifier?
  var prefersScrollingExpandsWhenScrolledToEdge: Bool
  func animateChanges(_ changes: () -> Void)
  init(presentedViewController: UIViewController, presenting presentingViewController: UIViewController?)
  @available(*, unavailable)
  convenience init()
}

@available(iOS 15.0, *)
extension UISheetPresentationController {
  /// The preferred corner radius of the sheet when presented.
  /// This value is only respected when the sheet is at the front of its stack.
  /// Default: nil
  @available(iOS 15.0, *)
  @MainActor var preferredCornerRadius: CGFloat?
}
