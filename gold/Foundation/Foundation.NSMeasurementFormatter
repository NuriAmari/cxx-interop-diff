@_exported import CoreFoundation

@available(*, unavailable, message: "Not available in Swift")
typealias NSMeasurementFormatterUnitOptions = Int
@available(iOS 10.0, *)
class MeasurementFormatter : Formatter, NSSecureCoding {
  var unitOptions: Int
  var unitStyle: Formatter.UnitStyle
  var locale: Locale!
  @NSCopying var numberFormatter: NumberFormatter!
  func string(from measurement: Measurement<Unit>) -> String
  @available(swift, obsoleted: 3, renamed: "string(from:)")
  func stringFromMeasurement(_ measurement: Measurement<Unit>) -> String
  func string(from unit: Unit) -> String
  @available(swift, obsoleted: 3, renamed: "string(from:)")
  func stringFromUnit(_ unit: Unit) -> String
  init()
  init?(coder: NSCoder)
  @available(iOS 10.0, *)
  class var supportsSecureCoding: Bool { get }
}

@available(macOS 10.12, iOS 10.0, watchOS 3.0, tvOS 10.0, *)
extension MeasurementFormatter {
  func string<UnitType>(from measurement: Measurement<UnitType>) -> String where UnitType : Unit
}
@available(iOS 10.0, *)
@available(swift, obsoleted: 3, renamed: "MeasurementFormatter")
typealias NSMeasurementFormatter = MeasurementFormatter
