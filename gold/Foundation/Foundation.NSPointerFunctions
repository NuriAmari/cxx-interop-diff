@_exported import CoreFoundation

var __FOUNDATION_NSPOINTERFUNCTIONS__: Int32 { get }
@available(*, unavailable, message: "Not available in Swift")
typealias NSPointerFunctionsOptions = Int
@available(iOS 6.0, *)
class NSPointerFunctions : NSObject, NSCopying {
  init(options: Int)
  @available(*, unavailable, renamed: "init(options:)", message: "Not available in Swift")
  class func pointerFunctionsWithOptions(_ options: Int) -> NSPointerFunctions
  var hashFunction: (@convention(c) (UnsafeRawPointer, (@convention(c) (UnsafeRawPointer) -> Int)?) -> Int)?
  var isEqualFunction: (@convention(c) (UnsafeRawPointer, UnsafeRawPointer, (@convention(c) (UnsafeRawPointer) -> Int)?) -> ObjCBool)?
  var sizeFunction: (@convention(c) (UnsafeRawPointer) -> Int)?
  var descriptionFunction: (@convention(c) (UnsafeRawPointer) -> String?)?
  var relinquishFunction: (@convention(c) (UnsafeRawPointer, (@convention(c) (UnsafeRawPointer) -> Int)?) -> Void)?
  var acquireFunction: (@convention(c) (UnsafeRawPointer, (@convention(c) (UnsafeRawPointer) -> Int)?, ObjCBool) -> UnsafeMutableRawPointer)?
  @available(iOS, introduced: 2.0, deprecated: 10.0, message: "Garbage collection no longer supported")
  var usesStrongWriteBarrier: Bool
  @available(iOS, introduced: 2.0, deprecated: 10.0, message: "Garbage collection no longer supported")
  var usesWeakReadAndWriteBarriers: Bool
  convenience init()
  @available(iOS 6.0, *)
  func copy(with zone: NSZone? = nil) -> Any
}
