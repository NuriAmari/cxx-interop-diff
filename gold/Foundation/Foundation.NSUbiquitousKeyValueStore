@_exported import CoreFoundation

@available(iOS 5.0, *)
@_nonSendable(_assumed) class NSUbiquitousKeyValueStore : NSObject {
  class var `default`: NSUbiquitousKeyValueStore { get }
  @available(swift, obsoleted: 3, renamed: "default")
  class var defaultStore: NSUbiquitousKeyValueStore { get }
  func object(forKey aKey: String) -> Any?
  @available(swift, obsoleted: 3, renamed: "object(forKey:)")
  func objectForKey(_ aKey: String) -> Any?
  func set(_ anObject: Any?, forKey aKey: String)
  @available(swift, obsoleted: 3, renamed: "set(_:forKey:)")
  func setObject(_ anObject: Any?, forKey aKey: String)
  func removeObject(forKey aKey: String)
  @available(swift, obsoleted: 3, renamed: "removeObject(forKey:)")
  func removeObjectForKey(_ aKey: String)
  func string(forKey aKey: String) -> String?
  @available(swift, obsoleted: 3, renamed: "string(forKey:)")
  func stringForKey(_ aKey: String) -> String?
  func array(forKey aKey: String) -> [Any]?
  @available(swift, obsoleted: 3, renamed: "array(forKey:)")
  func arrayForKey(_ aKey: String) -> [Any]?
  func dictionary(forKey aKey: String) -> [String : Any]?
  @available(swift, obsoleted: 3, renamed: "dictionary(forKey:)")
  func dictionaryForKey(_ aKey: String) -> [String : Any]?
  func data(forKey aKey: String) -> Data?
  @available(swift, obsoleted: 3, renamed: "data(forKey:)")
  func dataForKey(_ aKey: String) -> Data?
  func longLong(forKey aKey: String) -> Int64
  @available(swift, obsoleted: 3, renamed: "longLong(forKey:)")
  func longLongForKey(_ aKey: String) -> Int64
  func double(forKey aKey: String) -> Double
  @available(swift, obsoleted: 3, renamed: "double(forKey:)")
  func doubleForKey(_ aKey: String) -> Double
  func bool(forKey aKey: String) -> Bool
  @available(swift, obsoleted: 3, renamed: "bool(forKey:)")
  func boolForKey(_ aKey: String) -> Bool
  func set(_ aString: String?, forKey aKey: String)
  @available(swift, obsoleted: 3, renamed: "set(_:forKey:)")
  func setString(_ aString: String?, forKey aKey: String)
  func set(_ aData: Data?, forKey aKey: String)
  @available(swift, obsoleted: 3, renamed: "set(_:forKey:)")
  func setData(_ aData: Data?, forKey aKey: String)
  func set(_ anArray: [Any]?, forKey aKey: String)
  @available(swift, obsoleted: 3, renamed: "set(_:forKey:)")
  func setArray(_ anArray: [Any]?, forKey aKey: String)
  func set(_ aDictionary: [String : Any]?, forKey aKey: String)
  @available(swift, obsoleted: 3, renamed: "set(_:forKey:)")
  func setDictionary(_ aDictionary: [String : Any]?, forKey aKey: String)
  func set(_ value: Int64, forKey aKey: String)
  @available(swift, obsoleted: 3, renamed: "set(_:forKey:)")
  func setLongLong(_ value: Int64, forKey aKey: String)
  func set(_ value: Double, forKey aKey: String)
  @available(swift, obsoleted: 3, renamed: "set(_:forKey:)")
  func setDouble(_ value: Double, forKey aKey: String)
  func set(_ value: Bool, forKey aKey: String)
  @available(swift, obsoleted: 3, renamed: "set(_:forKey:)")
  func setBool(_ value: Bool, forKey aKey: String)
  var dictionaryRepresentation: [String : Any] { get }
  func synchronize() -> Bool
  init()
}

@available(*, unavailable)
extension NSUbiquitousKeyValueStore : @unchecked Sendable {
}
@available(iOS 5.0, *)
@available(swift, obsoleted: 3, renamed: "NSUbiquitousKeyValueStore.didChangeExternallyNotification")
let NSUbiquitousKeyValueStoreDidChangeExternallyNotification: NSNotification.Name
extension NSUbiquitousKeyValueStore {
  @available(iOS 5.0, *)
  class let didChangeExternallyNotification: NSNotification.Name
}
@available(iOS 5.0, *)
let NSUbiquitousKeyValueStoreChangeReasonKey: String
@available(iOS 5.0, *)
let NSUbiquitousKeyValueStoreChangedKeysKey: String
@available(iOS 5.0, *)
var NSUbiquitousKeyValueStoreServerChange: Int { get }
@available(iOS 5.0, *)
var NSUbiquitousKeyValueStoreInitialSyncChange: Int { get }
@available(iOS 5.0, *)
var NSUbiquitousKeyValueStoreQuotaViolationChange: Int { get }
@available(iOS 6.0, *)
var NSUbiquitousKeyValueStoreAccountChange: Int { get }
